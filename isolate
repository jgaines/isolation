#!/bin/bash

# isolate - Run opencode in an isolated environment using bubblewrap
# Only allows access to this repository folder

set -euo pipefail
if [[ "${TRACE-0}" == "1" ]]; then
    set -o xtrace
fi

# Get the current working directory
REPO_DIR="$(pwd)"

# Check if bubblewrap is installed
if ! command -v bwrap &> /dev/null; then
    echo "Error: bubblewrap (bwrap) is not installed."
    echo "Install it with: sudo apt install bubblewrap (Ubuntu/Debian) or sudo dnf install bubblewrap (Fedora)"
    exit 1
fi

# Check if opencode is available and resolve its real path
if ! command -v opencode &> /dev/null; then
    echo "Error: opencode is not installed or not in PATH."
    echo "Make sure opencode is installed and accessible."
    exit 1
fi

# Get the real path to opencode binary (resolves symlinks)
OPENCODE_PATH="$(readlink -f "$(command -v opencode)")"

# We need to mount the directory containing the real opencode binary
# Get the parent directories we need to mount
OPENCODE_DIR="$(dirname "$OPENCODE_PATH")"

# OpenCode needs write access to its config/log directory
OPENCODE_CONFIG_DIR="$HOME/.local/share/opencode"

# Parse command line arguments for --rw and --ro flags
EXTRA_MOUNTS=()
OPENCODE_ARGS=()
PARSING_RW=false
PARSING_RO=false

for arg in "$@"; do
    if [[ "$arg" == "--rw" ]]; then
        PARSING_RW=true
        PARSING_RO=false
    elif [[ "$arg" == "--ro" ]]; then
        PARSING_RO=true
        PARSING_RW=false
    elif [[ ("$PARSING_RW" == true || "$PARSING_RO" == true) && "$arg" != --* ]]; then
        # Resolve to absolute path and validate existence
        EXTRA_PATH="$(readlink -f "$arg")"
        if [[ -e "$EXTRA_PATH" ]]; then
            if [[ "$PARSING_RW" == true ]]; then
                EXTRA_MOUNTS+=("--bind" "$EXTRA_PATH" "$EXTRA_PATH")
                echo "Adding read-write mount: $EXTRA_PATH"
            else
                EXTRA_MOUNTS+=("--ro-bind" "$EXTRA_PATH" "$EXTRA_PATH")
                echo "Adding read-only mount: $EXTRA_PATH"
            fi
        else
            echo "Warning: Extra path does not exist: $arg"
            exit 1
        fi
    else
        PARSING_RW=false
        PARSING_RO=false
        if [[ "$arg" != "--rw" && "$arg" != "--ro" ]]; then
            OPENCODE_ARGS+=("$arg")
        fi
    fi
done

# Define standard read-only bind mounts
STANDARD_RO_BINDS=(
    "/usr"
    "/lib"
    "/lib64"
    "/bin"
    "/sbin"
    "/etc/passwd"
    "/etc/group"
    "/etc/nsswitch.conf"
    "/etc/resolv.conf"
    "/etc/ssl"
    "/etc/ca-certificates"
    "/usr/local/bin"
    "$HOME/.local/bin"
    "$HOME/.local/share/uv/tools"
    "$HOME/.local/latest"
    "$HOME/.local/share/mise/installs"
    "/home/linuxbrew/.linuxbrew"
)

# Build the ro-bind arguments array
RO_BIND_ARGS=()
for path in "${STANDARD_RO_BINDS[@]}"; do
    RO_BIND_ARGS+=("--ro-bind" "$path" "$path")
done

echo "Starting isolated opencode session..."
echo "Repository: $REPO_DIR"
echo "Working directory inside sandbox: /workspace"
echo "OpenCode binary: $OPENCODE_PATH"
if [[ ${#EXTRA_MOUNTS[@]} -gt 0 ]]; then
    echo "Extra mounts: $((${#EXTRA_MOUNTS[@]} / 3))"
fi
echo ""

# Check if --help is being requested and show additional help
for arg in "${OPENCODE_ARGS[@]}"; do
    if [[ "$arg" == "--help" || "$arg" == "-h" ]]; then
        echo "isolate script - Additional options:"
        echo "  --ro PATH [PATH ...]   Add a read-only bind mount for PATH(s)"
        echo "  --rw PATH [PATH ...]   Add a read-write bind mount for PATH(s)"
        echo ""
        echo "These options can be used multiple times to mount additional directories."
        echo "Paths will be resolved to absolute paths and validated before mounting."
        break
    fi
done

# Run opencode in bubblewrap sandbox
exec bwrap \
    "${RO_BIND_ARGS[@]}" \
    --ro-bind "$OPENCODE_DIR" "$OPENCODE_DIR" \
    --bind "$OPENCODE_CONFIG_DIR" "$OPENCODE_CONFIG_DIR" \
    --bind "$REPO_DIR" /workspace \
    "${EXTRA_MOUNTS[@]}" \
    --tmpfs /tmp \
    --tmpfs /var/tmp \
    --tmpfs /run \
    --proc /proc \
    --dev /dev \
    --unshare-all \
    --share-net \
    --new-session \
    --die-with-parent \
    --chdir /workspace \
    "$OPENCODE_PATH" "${OPENCODE_ARGS[@]}"